# Define the workflow name, trigger event, and the operating system that the workflow will run on.
name: Add Label to New Issues
on:
  issues:
    types: [opened]

# Define the steps that will run in the workflow. 
# The first step should check if the issue is a new issue, and the second step should add the label to the issue.
jobs:
  add-label-to-new-issues:
    runs-on: ubuntu-latest
    steps:
       # In the first step, the actions/github-script action is used to check if the issue is new. 
       # The github-token secret is passed to authenticate the script with the GitHub API. 
       # The script uses the context.issue object to retrieve the issue details, 
       # and checks if the created_at and updated_at properties are the same, which indicates that the issue is new.
      - name: Check if issue is new
        id: check_if_new
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.issues.get(context.issue);
            return { isNew: issue.data.created_at === issue.data.updated_at }
      # In the second step, the actions/github-script action is used again to add the label to the new issue. 
      # The script uses the context.repo and context.issue objects to identify the repository and issue, 
      # and adds the label 'new issue' to the issue.
      - name: Add label to new issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (steps.check_if_new.outputs.isNew) {
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['new issue']
              });
            }
